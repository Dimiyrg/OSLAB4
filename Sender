#include <windows.h>
#include <fstream>
#include <iostream>

using namespace std;

int main(int argc, char* argv[])
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);


    HANDLE hSemaphore1 = OpenSemaphore(SEMAPHORE_ALL_ACCESS, FALSE, L"ready");
    HANDLE hSemaphore2 = OpenSemaphore(SEMAPHORE_ALL_ACCESS, FALSE, L"isFilled");
    HANDLE hEvent = OpenEvent(EVENT_ALL_ACCESS, FALSE, L"message");
    ReleaseSemaphore(hSemaphore1, 1, NULL);

    while (true) 
    {
        cout << "1 - message\n2 - exit" << endl;
        int answer;
        cin >> answer;
        if (answer == 1)
        {
            if (WaitForSingleObject(hSemaphore2, 0) != WAIT_OBJECT_0)
            {
                cout << "there isn't space for a message" << endl;
                WaitForSingleObject(hSemaphore2, INFINITE);
            }

            cout << "message: \n";
            string message;
            string str;
            do 
            {
                cin >> str;
                if (str.size() > 19) 
                {
                    cout << "string more than 20, enter again" << endl;
                }
            } while (str.size() > 19);

            message = str;
            uint32_t strLen = message.size();
            ofstream fout(argv[1], ios::binary | ios::out | ios::app);
            fout.write((char*)&strLen, sizeof(uint32_t));
            fout.write((char*)message.c_str(), message.size());
            fout.close();

            PulseEvent(hEvent);
        }
        else 
        {
            return 0;
        }
    }
}
